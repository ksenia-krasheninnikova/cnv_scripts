#!/usr/bin/env python

import bisect
import sys
import argparse
import matplotlib
matplotlib.use('Agg')
from matplotlib.backends.backend_pdf import PdfPages
import matplotlib.pyplot as plt
import numpy as np     

def parse_values(path):
    data = []
    with open(path) as f:
        for line in f:
            line = line.strip().split(' ')
            if line[1] == '0.00':
                continue
            name=line[0].split('chr')
            data.append((int(name[1]),100*float(line[1])))
    data = sorted(data,key=lambda x:x[0])
    return data

if __name__ == '__main__' :
    parser = argparse.ArgumentParser()
    parser.add_argument('path')
    args = parser.parse_args()
    pp=PdfPages('./chrom_seg_dup_cov_yak.pdf')
    #pp=PdfPages('./chrom_seg_dup_cov.pdf')
    data = parse_values(args.path)
    plt.xlabel('Proportion of segmental duplications (%)')
    #plt.title('Common segdups in all samples')
    plt.title('Common segdups in Yakutsk samples')
    y_axis = np.arange(1, len(data) + 1, 1)
    plt.barh(y_axis, map(lambda x:x[1],data), align='center', facecolor='firebrick', alpha=0.5)
    #'springgreen'(pskov), 'darkorange'(novgorod), 'firebrick'(yakutsk), 'gray'(all)
    plt.yticks(y_axis, map(lambda x:'chr'+str(x[0]),data))
    plt.legend(fontsize=10)
    plt.savefig(pp, format='pdf')
    pp.close()
