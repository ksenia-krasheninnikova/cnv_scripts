#!/usr/bin/env python

import sys
import argparse
import subprocess
import os
from multiprocessing import Pool


def apply_mrfast(param):
    sample, reference, reads, output = param
    command = ' '.join(['mrfast','--search',reference,'--seq', os.path.join(reads,sample),'-o',os.path.join(output,sample+'.sam')])
    subprocess.call(command, shell=True)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('reads',help='folder with reads')
    parser.add_argument('N',type=int,help='number of threads')
    parser.add_argument('reference')
    parser.add_argument('output',help='folder for sam files')
    args = parser.parse_args()
    candidates = set(os.listdir(args.reads))
    params = []
    for sample in candidates:
        print >> sys.stderr, 'params for', sample
        params.append((sample, args.reference, args.reads, args.output))
    p = Pool(processes = args.N)
    p.map(apply_mrfast, params)
