#!/usr/bin/env python
'''
given a location the script parses mrcanavar output copynumber files and draws the cn values as lines
'''

import bisect
import sys
import argparse
import numpy
from collections import Counter
import matplotlib
matplotlib.use('Agg')
from matplotlib.backends.backend_pdf import PdfPages
import matplotlib.pyplot as plt
import pylab as pl
import os
         
color_names = ['purple','firebrick','darkgoldenrod','green','cyan','yellow','blue','black','red','gray','coral','fuchsia','plum', 'gold','navy','springgreen','burlywood','darkorange','darkgreen','crimson','darkkhaki','darkorange','dodgerblue','darksalmon']

def collect_colors():
    colors = []
    for name, hex in matplotlib.colors.cnames.iteritems():
        colors.append(name)
    return colors


def get_copy_number_in_region(path, scaffold, start, end):
    cn = []
    with open(path) as f:
        for line in f:
            line = line.strip().split()
            if not line or line[0] != scaffold :
                continue
            block_start = int(line[1])
            block_end = int(line[2])
            if start <= block_start and end >= block_end:
                cn.append([block_start, block_end, float(line[-1])])
    return cn

if __name__ == '__main__' :
    parser = argparse.ArgumentParser()
    parser.add_argument('scaffold')
    parser.add_argument('start')
    parser.add_argument('end')
    parser.add_argument('paths', nargs='+')
    args = parser.parse_args()
    pp=PdfPages('./seg_plot.pdf')
    plt.xlabel('Position on scaffold '+args.scaffold)
    plt.ylabel('Copy Number')
    i = 0
    for path in args.paths:
        cn = get_copy_number_in_region(path, args.scaffold, int(args.start), int(args.end))
        name = os.path.splitext(os.path.basename(path))[0]
        name = name.split('.')[0]
        name = name.split('_')[0]
        plt.plot([cn[0][0], cn[0][1]], [cn[0][2], cn[0][2]], linestyle='-', label = name, color = color_names[i], markersize=3)
        for e in cn:
            plt.plot([e[0], e[1]], [e[2], e[2]], linestyle='-', color = color_names[i], markersize=3)
        i += 1
    plt.legend(fontsize=10)
    plt.savefig(pp, format='pdf')
    pp.close()
