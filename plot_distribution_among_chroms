#!/usr/bin/env python

import argparse
import math
import numpy
from collections import defaultdict
import find_segdups as sgd

def parse_regions(bed):
    coverage = defaultdict(lambda: 0.0)
    with open(bed) as f:
        for line in f:
            line = line.strip().split()
            if int(line[3]) > 1:
                coverage[line[0]] += float(line[2]) - float(line[1])
    return coverage

def parse_chrs(chrs_name):
    chrs = dict()
    with open(chrs_name) as f:
        for line in f:
            line = line.strip().split()
            chrs[line[0]] = float(line[1])
    return chrs

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('bed', help='regions')
    parser.add_argument('chrs', help='sizes of chromosomes')
    args = parser.parse_args()
    coverage = parse_regions(args.bed)    
    chrs = parse_chrs(args.chrs)
    for key in chrs:
        print '%s %2.2f' % (key, coverage[key]/chrs[key])
